// File generated by regexp2go. DO NOT EDIT.
// regexp2go -flags=212 -pkg="commonregex" -fn="SHA256Hex" -pool=true "[0-9a-fA-F]{64}"

package commonregex

import "regexp/syntax"
import "unicode/utf8"
import "strings"
import "reflect"
import "unsafe"
import "runtime"
import "github.com/CAFxX/bytespool"

const SHA256HexRegexp = "[0-9a-fA-F]{64}"

var (
	_ = syntax.IsWordChar
	_ = strings.Index
)

type modeTypeSHA256Hex uint8

const (
	modeMatchSHA256Hex modeTypeSHA256Hex = iota
	modeFirstSHA256Hex
	modeLongestSHA256Hex
)

// SHA256Hex implements the regular expression
// [0-9a-fA-F]{64}
// with flags 212.
type SHA256Hex struct{}
type stateSHA256Hex struct {
	c   [2]int
	i   int
	pc  int
	cnt int
}

// FindString returns the first leftmost match.
func (e SHA256Hex) FindString(r string) (matches [1]string, pos int, ok bool) {
	var bt [0]stateSHA256Hex // static storage for backtracking state
	matches, pos, ok = e.doString(r, modeFirstSHA256Hex, bt[:0])
	return
}

// FindLongestString returns the leftmost-longest match.
func (e SHA256Hex) FindLongestString(r string) (matches [1]string, pos int, ok bool) {
	var bt [0]stateSHA256Hex // static storage for backtracking state
	matches, pos, ok = e.doString(r, modeLongestSHA256Hex, bt[:0])
	return
}

// Find returns the first leftmost match.
func (e SHA256Hex) Find(s []byte) (matches [1][]byte, pos int, ok bool) {
	var bt [0]stateSHA256Hex // static storage for backtracking state
	matches, pos, ok = e.doByteSlice(s, modeFirstSHA256Hex, bt[:0])
	return
}

// FindLongest returns the leftmost-longest match.
func (e SHA256Hex) FindLongest(s []byte) (matches [1][]byte, pos int, ok bool) {
	var bt [0]stateSHA256Hex // static storage for backtracking state
	matches, pos, ok = e.doByteSlice(s, modeLongestSHA256Hex, bt[:0])
	return
}

func (e SHA256Hex) doByteSlice(s []byte, m modeTypeSHA256Hex, bt []stateSHA256Hex) (matches [1][]byte, pos int, ok bool) {
	var r string
	rhdr := (*reflect.StringHeader)(unsafe.Pointer(&r))
	rhdr.Data = uintptr(unsafe.Pointer(&s[0]))
	rhdr.Len = len(s)

	var pmatches [1 * 2]int
	pmatches, ok = e.do(r, m, bt)
	pos = pmatches[0]

	for i := range matches {
		if pmatches[i*2] < 0 {
			continue
		}
		matches[i] = s[pmatches[i*2]:pmatches[i*2+1]:pmatches[i*2+1]]
	}

	runtime.KeepAlive(s)
	return
}

func (e SHA256Hex) doString(s string, m modeTypeSHA256Hex, bt []stateSHA256Hex) (matches [1]string, pos int, ok bool) {
	var pmatches [1 * 2]int
	pmatches, ok = e.do(s, m, bt)
	pos = pmatches[0]

	for i := range matches {
		if pmatches[i*2] < 0 {
			continue
		}
		matches[i] = s[pmatches[i*2]:pmatches[i*2+1]]
	}

	return
}

func (e SHA256Hex) do(r string, m modeTypeSHA256Hex, bt []stateSHA256Hex) ([2]int, bool) {
	si := 0 // starting byte index
restart:
	bt = bt[:0]         // fast reset dynamic backtracking state
	c := [2]int{-1, -1} // captures
	var bc [2]int       // captures for the longest match so far
	matched := false    // succesful match flag
	i := si             // current byte index
	c[0] = i            // start of match
	goto inst1          // initial instruction

	// inst0 unreacheable

	goto unreachable
	goto inst1
inst1: // rune "09AFaf" -> 2
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst2
			}
			goto inst1_fail
		}
	}
	goto inst1_fail
	goto unreachable
	goto inst1_fail
inst1_fail:
	goto fail

	goto unreachable
	goto inst2
inst2: // rune "09AFaf" -> 3
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst3
			}
			goto inst2_fail
		}
	}
	goto inst2_fail
	goto unreachable
	goto inst2_fail
inst2_fail:
	goto fail

	goto unreachable
	goto inst3
inst3: // rune "09AFaf" -> 4
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst4
			}
			goto inst3_fail
		}
	}
	goto inst3_fail
	goto unreachable
	goto inst3_fail
inst3_fail:
	goto fail

	goto unreachable
	goto inst4
inst4: // rune "09AFaf" -> 5
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst5
			}
			goto inst4_fail
		}
	}
	goto inst4_fail
	goto unreachable
	goto inst4_fail
inst4_fail:
	goto fail

	goto unreachable
	goto inst5
inst5: // rune "09AFaf" -> 6
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst6
			}
			goto inst5_fail
		}
	}
	goto inst5_fail
	goto unreachable
	goto inst5_fail
inst5_fail:
	goto fail

	goto unreachable
	goto inst6
inst6: // rune "09AFaf" -> 7
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst7
			}
			goto inst6_fail
		}
	}
	goto inst6_fail
	goto unreachable
	goto inst6_fail
inst6_fail:
	goto fail

	goto unreachable
	goto inst7
inst7: // rune "09AFaf" -> 8
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst8
			}
			goto inst7_fail
		}
	}
	goto inst7_fail
	goto unreachable
	goto inst7_fail
inst7_fail:
	goto fail

	goto unreachable
	goto inst8
inst8: // rune "09AFaf" -> 9
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst9
			}
			goto inst8_fail
		}
	}
	goto inst8_fail
	goto unreachable
	goto inst8_fail
inst8_fail:
	goto fail

	goto unreachable
	goto inst9
inst9: // rune "09AFaf" -> 10
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst10
			}
			goto inst9_fail
		}
	}
	goto inst9_fail
	goto unreachable
	goto inst9_fail
inst9_fail:
	goto fail

	goto unreachable
	goto inst10
inst10: // rune "09AFaf" -> 11
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst11
			}
			goto inst10_fail
		}
	}
	goto inst10_fail
	goto unreachable
	goto inst10_fail
inst10_fail:
	goto fail

	goto unreachable
	goto inst11
inst11: // rune "09AFaf" -> 12
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst12
			}
			goto inst11_fail
		}
	}
	goto inst11_fail
	goto unreachable
	goto inst11_fail
inst11_fail:
	goto fail

	goto unreachable
	goto inst12
inst12: // rune "09AFaf" -> 13
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst13
			}
			goto inst12_fail
		}
	}
	goto inst12_fail
	goto unreachable
	goto inst12_fail
inst12_fail:
	goto fail

	goto unreachable
	goto inst13
inst13: // rune "09AFaf" -> 14
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst14
			}
			goto inst13_fail
		}
	}
	goto inst13_fail
	goto unreachable
	goto inst13_fail
inst13_fail:
	goto fail

	goto unreachable
	goto inst14
inst14: // rune "09AFaf" -> 15
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst15
			}
			goto inst14_fail
		}
	}
	goto inst14_fail
	goto unreachable
	goto inst14_fail
inst14_fail:
	goto fail

	goto unreachable
	goto inst15
inst15: // rune "09AFaf" -> 16
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst16
			}
			goto inst15_fail
		}
	}
	goto inst15_fail
	goto unreachable
	goto inst15_fail
inst15_fail:
	goto fail

	goto unreachable
	goto inst16
inst16: // rune "09AFaf" -> 17
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst17
			}
			goto inst16_fail
		}
	}
	goto inst16_fail
	goto unreachable
	goto inst16_fail
inst16_fail:
	goto fail

	goto unreachable
	goto inst17
inst17: // rune "09AFaf" -> 18
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst18
			}
			goto inst17_fail
		}
	}
	goto inst17_fail
	goto unreachable
	goto inst17_fail
inst17_fail:
	goto fail

	goto unreachable
	goto inst18
inst18: // rune "09AFaf" -> 19
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst19
			}
			goto inst18_fail
		}
	}
	goto inst18_fail
	goto unreachable
	goto inst18_fail
inst18_fail:
	goto fail

	goto unreachable
	goto inst19
inst19: // rune "09AFaf" -> 20
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst20
			}
			goto inst19_fail
		}
	}
	goto inst19_fail
	goto unreachable
	goto inst19_fail
inst19_fail:
	goto fail

	goto unreachable
	goto inst20
inst20: // rune "09AFaf" -> 21
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst21
			}
			goto inst20_fail
		}
	}
	goto inst20_fail
	goto unreachable
	goto inst20_fail
inst20_fail:
	goto fail

	goto unreachable
	goto inst21
inst21: // rune "09AFaf" -> 22
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst22
			}
			goto inst21_fail
		}
	}
	goto inst21_fail
	goto unreachable
	goto inst21_fail
inst21_fail:
	goto fail

	goto unreachable
	goto inst22
inst22: // rune "09AFaf" -> 23
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst23
			}
			goto inst22_fail
		}
	}
	goto inst22_fail
	goto unreachable
	goto inst22_fail
inst22_fail:
	goto fail

	goto unreachable
	goto inst23
inst23: // rune "09AFaf" -> 24
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst24
			}
			goto inst23_fail
		}
	}
	goto inst23_fail
	goto unreachable
	goto inst23_fail
inst23_fail:
	goto fail

	goto unreachable
	goto inst24
inst24: // rune "09AFaf" -> 25
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst25
			}
			goto inst24_fail
		}
	}
	goto inst24_fail
	goto unreachable
	goto inst24_fail
inst24_fail:
	goto fail

	goto unreachable
	goto inst25
inst25: // rune "09AFaf" -> 26
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst26
			}
			goto inst25_fail
		}
	}
	goto inst25_fail
	goto unreachable
	goto inst25_fail
inst25_fail:
	goto fail

	goto unreachable
	goto inst26
inst26: // rune "09AFaf" -> 27
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst27
			}
			goto inst26_fail
		}
	}
	goto inst26_fail
	goto unreachable
	goto inst26_fail
inst26_fail:
	goto fail

	goto unreachable
	goto inst27
inst27: // rune "09AFaf" -> 28
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst28
			}
			goto inst27_fail
		}
	}
	goto inst27_fail
	goto unreachable
	goto inst27_fail
inst27_fail:
	goto fail

	goto unreachable
	goto inst28
inst28: // rune "09AFaf" -> 29
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst29
			}
			goto inst28_fail
		}
	}
	goto inst28_fail
	goto unreachable
	goto inst28_fail
inst28_fail:
	goto fail

	goto unreachable
	goto inst29
inst29: // rune "09AFaf" -> 30
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst30
			}
			goto inst29_fail
		}
	}
	goto inst29_fail
	goto unreachable
	goto inst29_fail
inst29_fail:
	goto fail

	goto unreachable
	goto inst30
inst30: // rune "09AFaf" -> 31
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst31
			}
			goto inst30_fail
		}
	}
	goto inst30_fail
	goto unreachable
	goto inst30_fail
inst30_fail:
	goto fail

	goto unreachable
	goto inst31
inst31: // rune "09AFaf" -> 32
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst32
			}
			goto inst31_fail
		}
	}
	goto inst31_fail
	goto unreachable
	goto inst31_fail
inst31_fail:
	goto fail

	goto unreachable
	goto inst32
inst32: // rune "09AFaf" -> 33
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst33
			}
			goto inst32_fail
		}
	}
	goto inst32_fail
	goto unreachable
	goto inst32_fail
inst32_fail:
	goto fail

	goto unreachable
	goto inst33
inst33: // rune "09AFaf" -> 34
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst34
			}
			goto inst33_fail
		}
	}
	goto inst33_fail
	goto unreachable
	goto inst33_fail
inst33_fail:
	goto fail

	goto unreachable
	goto inst34
inst34: // rune "09AFaf" -> 35
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst35
			}
			goto inst34_fail
		}
	}
	goto inst34_fail
	goto unreachable
	goto inst34_fail
inst34_fail:
	goto fail

	goto unreachable
	goto inst35
inst35: // rune "09AFaf" -> 36
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst36
			}
			goto inst35_fail
		}
	}
	goto inst35_fail
	goto unreachable
	goto inst35_fail
inst35_fail:
	goto fail

	goto unreachable
	goto inst36
inst36: // rune "09AFaf" -> 37
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst37
			}
			goto inst36_fail
		}
	}
	goto inst36_fail
	goto unreachable
	goto inst36_fail
inst36_fail:
	goto fail

	goto unreachable
	goto inst37
inst37: // rune "09AFaf" -> 38
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst38
			}
			goto inst37_fail
		}
	}
	goto inst37_fail
	goto unreachable
	goto inst37_fail
inst37_fail:
	goto fail

	goto unreachable
	goto inst38
inst38: // rune "09AFaf" -> 39
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst39
			}
			goto inst38_fail
		}
	}
	goto inst38_fail
	goto unreachable
	goto inst38_fail
inst38_fail:
	goto fail

	goto unreachable
	goto inst39
inst39: // rune "09AFaf" -> 40
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst40
			}
			goto inst39_fail
		}
	}
	goto inst39_fail
	goto unreachable
	goto inst39_fail
inst39_fail:
	goto fail

	goto unreachable
	goto inst40
inst40: // rune "09AFaf" -> 41
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst41
			}
			goto inst40_fail
		}
	}
	goto inst40_fail
	goto unreachable
	goto inst40_fail
inst40_fail:
	goto fail

	goto unreachable
	goto inst41
inst41: // rune "09AFaf" -> 42
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst42
			}
			goto inst41_fail
		}
	}
	goto inst41_fail
	goto unreachable
	goto inst41_fail
inst41_fail:
	goto fail

	goto unreachable
	goto inst42
inst42: // rune "09AFaf" -> 43
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst43
			}
			goto inst42_fail
		}
	}
	goto inst42_fail
	goto unreachable
	goto inst42_fail
inst42_fail:
	goto fail

	goto unreachable
	goto inst43
inst43: // rune "09AFaf" -> 44
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst44
			}
			goto inst43_fail
		}
	}
	goto inst43_fail
	goto unreachable
	goto inst43_fail
inst43_fail:
	goto fail

	goto unreachable
	goto inst44
inst44: // rune "09AFaf" -> 45
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst45
			}
			goto inst44_fail
		}
	}
	goto inst44_fail
	goto unreachable
	goto inst44_fail
inst44_fail:
	goto fail

	goto unreachable
	goto inst45
inst45: // rune "09AFaf" -> 46
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst46
			}
			goto inst45_fail
		}
	}
	goto inst45_fail
	goto unreachable
	goto inst45_fail
inst45_fail:
	goto fail

	goto unreachable
	goto inst46
inst46: // rune "09AFaf" -> 47
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst47
			}
			goto inst46_fail
		}
	}
	goto inst46_fail
	goto unreachable
	goto inst46_fail
inst46_fail:
	goto fail

	goto unreachable
	goto inst47
inst47: // rune "09AFaf" -> 48
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst48
			}
			goto inst47_fail
		}
	}
	goto inst47_fail
	goto unreachable
	goto inst47_fail
inst47_fail:
	goto fail

	goto unreachable
	goto inst48
inst48: // rune "09AFaf" -> 49
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst49
			}
			goto inst48_fail
		}
	}
	goto inst48_fail
	goto unreachable
	goto inst48_fail
inst48_fail:
	goto fail

	goto unreachable
	goto inst49
inst49: // rune "09AFaf" -> 50
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst50
			}
			goto inst49_fail
		}
	}
	goto inst49_fail
	goto unreachable
	goto inst49_fail
inst49_fail:
	goto fail

	goto unreachable
	goto inst50
inst50: // rune "09AFaf" -> 51
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst51
			}
			goto inst50_fail
		}
	}
	goto inst50_fail
	goto unreachable
	goto inst50_fail
inst50_fail:
	goto fail

	goto unreachable
	goto inst51
inst51: // rune "09AFaf" -> 52
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst52
			}
			goto inst51_fail
		}
	}
	goto inst51_fail
	goto unreachable
	goto inst51_fail
inst51_fail:
	goto fail

	goto unreachable
	goto inst52
inst52: // rune "09AFaf" -> 53
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst53
			}
			goto inst52_fail
		}
	}
	goto inst52_fail
	goto unreachable
	goto inst52_fail
inst52_fail:
	goto fail

	goto unreachable
	goto inst53
inst53: // rune "09AFaf" -> 54
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst54
			}
			goto inst53_fail
		}
	}
	goto inst53_fail
	goto unreachable
	goto inst53_fail
inst53_fail:
	goto fail

	goto unreachable
	goto inst54
inst54: // rune "09AFaf" -> 55
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst55
			}
			goto inst54_fail
		}
	}
	goto inst54_fail
	goto unreachable
	goto inst54_fail
inst54_fail:
	goto fail

	goto unreachable
	goto inst55
inst55: // rune "09AFaf" -> 56
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst56
			}
			goto inst55_fail
		}
	}
	goto inst55_fail
	goto unreachable
	goto inst55_fail
inst55_fail:
	goto fail

	goto unreachable
	goto inst56
inst56: // rune "09AFaf" -> 57
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst57
			}
			goto inst56_fail
		}
	}
	goto inst56_fail
	goto unreachable
	goto inst56_fail
inst56_fail:
	goto fail

	goto unreachable
	goto inst57
inst57: // rune "09AFaf" -> 58
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst58
			}
			goto inst57_fail
		}
	}
	goto inst57_fail
	goto unreachable
	goto inst57_fail
inst57_fail:
	goto fail

	goto unreachable
	goto inst58
inst58: // rune "09AFaf" -> 59
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst59
			}
			goto inst58_fail
		}
	}
	goto inst58_fail
	goto unreachable
	goto inst58_fail
inst58_fail:
	goto fail

	goto unreachable
	goto inst59
inst59: // rune "09AFaf" -> 60
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst60
			}
			goto inst59_fail
		}
	}
	goto inst59_fail
	goto unreachable
	goto inst59_fail
inst59_fail:
	goto fail

	goto unreachable
	goto inst60
inst60: // rune "09AFaf" -> 61
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst61
			}
			goto inst60_fail
		}
	}
	goto inst60_fail
	goto unreachable
	goto inst60_fail
inst60_fail:
	goto fail

	goto unreachable
	goto inst61
inst61: // rune "09AFaf" -> 62
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst62
			}
			goto inst61_fail
		}
	}
	goto inst61_fail
	goto unreachable
	goto inst61_fail
inst61_fail:
	goto fail

	goto unreachable
	goto inst62
inst62: // rune "09AFaf" -> 63
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst63
			}
			goto inst62_fail
		}
	}
	goto inst62_fail
	goto unreachable
	goto inst62_fail
inst62_fail:
	goto fail

	goto unreachable
	goto inst63
inst63: // rune "09AFaf" -> 64
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst64
			}
			goto inst63_fail
		}
	}
	goto inst63_fail
	goto unreachable
	goto inst63_fail
inst63_fail:
	goto fail

	goto unreachable
	goto inst64
inst64: // rune "09AFaf" -> 65
	if i >= 0 && i < len(r) {
		cr, sz := rune(r[i]), 1
		if cru := uint(cr); cru < 128 {
			const runeMask = "\x00\x00\x00\x00\x00\x00\xff\x03~\x00\x00\x00~\x00\x00\x00"
			if runeMask[cru/8]&(1<<(cru%8)) != 0 {
				i += sz
				goto inst65
			}
			goto inst64_fail
		}
	}
	goto inst64_fail
	goto unreachable
	goto inst64_fail
inst64_fail:
	goto fail

	goto unreachable
	goto inst65
inst65: // match
	c[1] = i // end of match
	goto match

	goto unreachable
	goto fail
fail:
	{
		if i <= len(r) && len(bt) > 0 {
			switch bt[len(bt)-1].pc {
			default:
				panic(bt[len(bt)-1].pc)
			}
		}
		if matched {
			return bc, true
		}
		if len(r) > si {
			i = si
			cr, sz := rune(r[i]), 1
			if cr >= utf8.RuneSelf {
				cr, sz = utf8.DecodeRuneInString(r[i:])
			}

			si += sz
			_ = cr
			goto restart
		}
		return bc, false
	}

	goto unreachable
	goto match
match:
	if !matched || c[1]-c[0] > bc[1]-bc[0] {
		if m == modeMatchSHA256Hex || m == modeFirstSHA256Hex {
			return c, true
		}
		bc = c
		matched = true
	}
	goto fail

	goto unreachable
unreachable:
	panic("unreachable")
}
